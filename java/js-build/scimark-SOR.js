/* Generated from Java with JSweet 2.0.0 - http://www.jsweet.org */
/**
 * Initializes a sequence of uniformly distributed quasi random numbers
 * with a given seed on a given half-open interval [left,right).
 *
 * @param <B>seed</B> (int)<BR>
 *
 * The seed of the random number generator.  Two sequences with the same
 * seed will be identical.
 *
 * @param <B>left</B> (double)<BR>
 *
 * The left endpoint of the half-open interval [left,right).
 *
 * @param <B>right</B> (double)<BR>
 *
 * The right endpoint of the half-open interval [left,right).
 * @param {number} seed
 * @param {number} left
 * @param {number} right
 * @class
 */
var Random = /** @class */ (function () {
    function Random(seed, left, right) {
        var _this = this;
        this.seed = 0;
        /*private*/ this.i = 4;
        /*private*/ this.j = 16;
        /*private*/ this.mdig = 32;
        /*private*/ this.one = 1;
        /*private*/ this.m1 = (this.one << this.mdig - 2) + ((this.one << this.mdig - 2) - this.one);
        /*private*/ this.m2 = this.one << (this.mdig / 2 | 0);
        /*private*/ this.dm1 = 1.0 / this.m1;
        /*private*/ this.haveRange = false;
        /*private*/ this.left = 0.0;
        /*private*/ this.right = 1.0;
        /*private*/ this.width = 1.0;
        if (((typeof seed === 'number') || seed === null) && ((typeof left === 'number') || left === null) && ((typeof right === 'number') || right === null)) {
            var __args = Array.prototype.slice.call(arguments);
            this.m = null;
            this.seed = 0;
            this.i = 4;
            this.j = 16;
            this.mdig = 32;
            this.one = 1;
            this.m1 = (this.one << this.mdig - 2) + ((this.one << this.mdig - 2) - this.one);
            this.m2 = this.one << (this.mdig / 2 | 0);
            this.dm1 = 1.0 / this.m1;
            this.haveRange = false;
            this.left = 0.0;
            this.right = 1.0;
            this.width = 1.0;
            this.m = null;
            (function () {
                _this.initialize(seed);
                _this.left = left;
                _this.right = right;
                _this.width = right - left;
                _this.haveRange = true;
            })();
        }
        else if (((typeof seed === 'number') || seed === null) && ((typeof left === 'number') || left === null) && right === undefined) {
            var __args = Array.prototype.slice.call(arguments);
            var left_1 = __args[0];
            var right_1 = __args[1];
            this.m = null;
            this.seed = 0;
            this.i = 4;
            this.j = 16;
            this.mdig = 32;
            this.one = 1;
            this.m1 = (this.one << this.mdig - 2) + ((this.one << this.mdig - 2) - this.one);
            this.m2 = this.one << (this.mdig / 2 | 0);
            this.dm1 = 1.0 / this.m1;
            this.haveRange = false;
            this.left = 0.0;
            this.right = 1.0;
            this.width = 1.0;
            this.m = null;
            (function () {
                _this.initialize((Date.now() | 0));
                _this.left = left_1;
                _this.right = right_1;
                _this.width = right_1 - left_1;
                _this.haveRange = true;
            })();
        }
        else if (((typeof seed === 'number') || seed === null) && left === undefined && right === undefined) {
            var __args = Array.prototype.slice.call(arguments);
            this.m = null;
            this.seed = 0;
            this.i = 4;
            this.j = 16;
            this.mdig = 32;
            this.one = 1;
            this.m1 = (this.one << this.mdig - 2) + ((this.one << this.mdig - 2) - this.one);
            this.m2 = this.one << (this.mdig / 2 | 0);
            this.dm1 = 1.0 / this.m1;
            this.haveRange = false;
            this.left = 0.0;
            this.right = 1.0;
            this.width = 1.0;
            this.m = null;
            (function () {
                _this.initialize(seed);
            })();
        }
        else if (seed === undefined && left === undefined && right === undefined) {
            var __args = Array.prototype.slice.call(arguments);
            this.m = null;
            this.seed = 0;
            this.i = 4;
            this.j = 16;
            this.mdig = 32;
            this.one = 1;
            this.m1 = (this.one << this.mdig - 2) + ((this.one << this.mdig - 2) - this.one);
            this.m2 = this.one << (this.mdig / 2 | 0);
            this.dm1 = 1.0 / this.m1;
            this.haveRange = false;
            this.left = 0.0;
            this.right = 1.0;
            this.width = 1.0;
            this.m = null;
            (function () {
                _this.initialize((Date.now() | 0));
            })();
        }
        else
            throw new Error('invalid overload');
    }
    /**
     * Returns the next random number in the sequence.
     * @return {number}
     */
    Random.prototype.nextDouble = function () {
        var k;
        var nextValue;
        k = this.m[this.i] - this.m[this.j];
        if (k < 0)
            k += this.m1;
        this.m[this.j] = k;
        if (this.i === 0)
            this.i = 16;
        else
            this.i--;
        if (this.j === 0)
            this.j = 16;
        else
            this.j--;
        if (this.haveRange)
            return this.left + this.dm1 * k * this.width;
        else
            return this.dm1 * k;
    };
    /**
     * Returns the next N random numbers in the sequence, as
     * a vector.
     * @param {Array} x
     */
    Random.prototype.nextDoubles = function (x) {
        var N = x.length;
        var remainder = N & 3;
        if (this.haveRange) {
            for (var count = 0; count < N; count++) {
                var k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count] = this.left + this.dm1 * k * this.width;
            }
            ;
        }
        else {
            for (var count = 0; count < remainder; count++) {
                var k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count] = this.dm1 * k;
            }
            ;
            for (var count = remainder; count < N; count += 4) {
                var k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count] = this.dm1 * k;
                k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count + 1] = this.dm1 * k;
                k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count + 2] = this.dm1 * k;
                k = this.m[this.i] - this.m[this.j];
                if (this.i === 0)
                    this.i = 16;
                else
                    this.i--;
                if (k < 0)
                    k += this.m1;
                this.m[this.j] = k;
                if (this.j === 0)
                    this.j = 16;
                else
                    this.j--;
                x[count + 3] = this.dm1 * k;
            }
            ;
        }
    };
    /*private*/ Random.prototype.initialize = function (seed) {
        var jseed;
        var k0;
        var k1;
        var j0;
        var j1;
        var iloop;
        this.seed = seed;
        this.m = (function (s) { var a = []; while (s-- > 0)
            a.push(0); return a; })(17);
        jseed = Math.min(Math.abs(seed), this.m1);
        if (jseed % 2 === 0)
            --jseed;
        k0 = 9069 % this.m2;
        k1 = (9069 / this.m2 | 0);
        j0 = jseed % this.m2;
        j1 = (jseed / this.m2 | 0);
        for (iloop = 0; iloop < 17; ++iloop) {
            jseed = j0 * k0;
            j1 = ((jseed / this.m2 | 0) + j0 * k1 + j1 * k0) % ((this.m2 / 2 | 0));
            j0 = jseed % this.m2;
            this.m[iloop] = j0 + this.m2 * j1;
        }
        ;
        this.i = 4;
        this.j = 16;
    };
    return Random;
}());
Random["__class"] = "Random";
//# sourceMappingURL=data:application/json;base64,/* Generated from Java with JSweet 2.0.0 - http://www.jsweet.org */
var Main = /** @class */ (function () {
    function Main() {
    }
    /*private*/ Main.RandomMatrix = function (M, N, R) {
        var A = (function (dims) { var allocate = function (dims) { if (dims.length == 0) {
            return 0;
        }
        else {
            var array = [];
            for (var i = 0; i < dims[0]; i++) {
                array.push(allocate(dims.slice(1)));
            }
            return array;
        } }; return allocate(dims); })([M, N]);
        for (var i = 0; i < N; i++)
            for (var j = 0; j < N; j++)
                A[i][j] = R.nextDouble();
        ;
        return A;
    };
    Main.main = function (args) {
        var G = Main.RandomMatrix(300, 300, new Random(113));
        var cycles = 1;
        for (var i = 0; i < 10; i++) {
            Main.execute(1.25, G, cycles);
            cycles *= 2;
        }
        ;
    };
    Main.num_flops = function (M, N, num_iterations) {
        var Md = M;
        var Nd = N;
        var num_iterD = num_iterations;
        return (Md - 1) * (Nd - 1) * num_iterD * 6.0;
    };
    Main.execute = function (omega, G, num_iterations) {
        var M = G.length;
        var N = G[0].length;
        var omega_over_four = omega * 0.25;
        var one_minus_omega = 1.0 - omega;
        var Mm1 = M - 1;
        var Nm1 = N - 1;
        for (var p = 0; p < num_iterations; p++) {
            for (var i = 1; i < Mm1; i++) {
                var Gi = G[i];
                var Gim1 = G[i - 1];
                var Gip1 = G[i + 1];
                for (var j = 1; j < Nm1; j++)
                    Gi[j] = omega_over_four * (Gim1[j] + Gip1[j] + Gi[j - 1] + Gi[j + 1]) + one_minus_omega * Gi[j];
            }
            ;
        }
        ;
    };
    return Main;
}());
Main["__class"] = "Main";
Main.main(null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3RzL01haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUVBQW1FO0FBQ25FO0lBQUE7SUF1Q0EsQ0FBQztJQXRDRyxXQUFXLENBQVEsaUJBQVksR0FBbkIsVUFBb0IsQ0FBVSxFQUFFLENBQVUsRUFBRSxDQUFVO1FBQzlELElBQUksQ0FBQyxHQUFzQixDQUFDLFVBQVMsSUFBSSxJQUFJLElBQUksUUFBUSxHQUFHLFVBQVMsSUFBSSxJQUFJLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFBQyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFBQyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7WUFBQyxHQUFHLENBQUEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbFEsR0FBRyxDQUFBLENBQUMsSUFBSSxDQUFDLEdBQVksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUUsR0FBRyxDQUFBLENBQUMsSUFBSSxDQUFDLEdBQVksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO2dCQUFFLENBQUMs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