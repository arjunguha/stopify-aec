/* Generated from Java with JSweet 2.0.0 - http://www.jsweet.org */
var Main = /** @class */ (function () {
    function Main() {
    }
    Main.main = function (args) {
        var n = 5000;
        console.info(new Main().Approximate(n));
    };
    /*private*/ Main.prototype.Approximate = function (n) {
        var u = (function (s) { var a = []; while (s-- > 0)
            a.push(0); return a; })(n);
        for (var i = 0; i < n; i++)
            u[i] = 1;
        var v = (function (s) { var a = []; while (s-- > 0)
            a.push(0); return a; })(n);
        for (var i = 0; i < n; i++)
            v[i] = 0;
        for (var i = 0; i < 10; i++) {
            this.MultiplyAtAv(n, u, v);
            this.MultiplyAtAv(n, v, u);
        }
        ;
        var vBv = 0;
        var vv = 0;
        for (var i = 0; i < n; i++) {
            vBv += u[i] * v[i];
            vv += v[i] * v[i];
        }
        ;
        return Math.sqrt(vBv / vv);
    };
    /*private*/ Main.prototype.A = function (i, j) {
        return 1.0 / (((i + j) * (i + j + 1) / 2 | 0) + i + 1);
    };
    /*private*/ Main.prototype.MultiplyAv = function (n, v, Av) {
        for (var i = 0; i < n; i++) {
            Av[i] = 0;
            for (var j = 0; j < n; j++)
                Av[i] += this.A(i, j) * v[j];
        }
        ;
    };
    /*private*/ Main.prototype.MultiplyAtv = function (n, v, Atv) {
        for (var i = 0; i < n; i++) {
            Atv[i] = 0;
            for (var j = 0; j < n; j++)
                Atv[i] += this.A(j, i) * v[j];
        }
        ;
    };
    /*private*/ Main.prototype.MultiplyAtAv = function (n, v, AtAv) {
        var u = (function (s) { var a = []; while (s-- > 0)
            a.push(0); return a; })(n);
        this.MultiplyAv(n, v, u);
        this.MultiplyAtv(n, u, AtAv);
    };
    return Main;
}());
Main["__class"] = "Main";
Main.main(null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3RzL01haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUVBQW1FO0FBQ25FO0lBQUE7SUErQ0EsQ0FBQztJQTlDaUIsU0FBSSxHQUFsQixVQUFtQixJQUFlO1FBQzlCLElBQUksQ0FBQyxHQUFZLElBQUksQ0FBQztRQUN0QixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELFdBQVcsQ0FBQywwQkFBVyxHQUFYLFVBQVksQ0FBVTtRQUM5QixJQUFJLENBQUMsR0FBYyxDQUFDLFVBQUEsQ0FBQyxJQUFNLElBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU0sQ0FBQyxFQUFFLEdBQUMsQ0FBQztZQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsR0FBRyxDQUFBLENBQUMsSUFBSSxDQUFDLEdBQVksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsR0FBYyxDQUFDLFVBQUEsQ0FBQyxJQUFNLElBQUksQ0FBQyxHQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU0sQ0FBQyxFQUFFLEdBQUMsQ0FBQztZQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsR0FBRyxDQUFBLENBQUMsSUFBSSxDQUFDLEdBQVksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFO1lB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